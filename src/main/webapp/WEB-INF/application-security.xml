<beans:beans xmlns="http://www.springframework.org/schema/security"
    		 xmlns:beans="http://www.springframework.org/schema/beans" 
    		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        	 xsi:schemaLocation="http://www.springframework.org/schema/beans
                            	 http://www.springframework.org/schema/beans/spring-beans.xsd
                            	 http://www.springframework.org/schema/security
                            	 http://www.springframework.org/schema/security/spring-security-4.1.xsd" >
                            	 
<!-- <http> element is the parent for all web-related namespace functionality -->
    <http auto-config="true" use-expressions="true">
    
    <csrf disabled="true"/>
    
<!-- <intercept-url> element defines a pattern which is matched against the URLs of incoming requests using an ant path style syntax
		access attribute:- defines the access requirements for requests matching the given pattern-->        
		<intercept-url pattern="/addproduct" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/addcategory" access="hasRole('ROLE_ADMIN')" />
       
        <form-login login-page="/alogin" default-target-url="/admin" authentication-failure-url="/accessdenied"/>
        
        <logout logout-success-url="/logout"/>
    
    </http>
    
<!--     handles authentication requests from other parts of the framework -->
    <authentication-manager alias="authenticationManager">
    
<!--     It is a mechanism against which the authentication manager authenticates users -->
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource" 
            	users-by-username-query="select mail,pwd from User where mail= ?"
    	        authorities-by-username-query="select c.mail,u.authority from User c, UserRole u where c.uid=u.user_role_id and c.mail=?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>
   